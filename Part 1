#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>

int HP = 50;
int EXP = 0;
int completeQ=0;
int location[4][4];


void Q1();
void QUESTS(int a, int b);
void part1();
void Q2B1();
void map();



int main()
{
    part1();
}

void part1()
{
    int i, j, x, current, r, c;
    char direction;
    x = 1;
    
    for(i = 0; i < 4; ++i)
    {
        for(j = 0; j < 4; ++j)
        {
            location[i][j] = x;
            x++;
        }
    }
    
    
    r = 0;
    c = 0;
    
    do {
        current = location[r][c];
        QUESTS(current, completeQ);
        if (completeQ==2)
        {
            break;
        }
        map();
        printf("\nYour current location is %d", current);
        printf("\nWhat direction would you like to go (N/S/E/W)? ");
        scanf("%c", &direction);
        direction=toupper(direction);
        getchar();
        
        switch (direction)
        {
            case 'N' :
                if (current > 5) {
                    r = r - 1;
                }
                else {
                    printf("\nSorry, you can't go north from here. Try another direction. (E/S/W) ");
                }
                break;
            case 'S' :
                if (current<13) {
                    r=r+1; }
                else {
                    printf("\nSorry, you can't go south from here. Try another direction. (N/E/W) "); }
                break;
            case 'E' :
                if ((current%4)!=0) {
                    c=c+1; }
                else {
                    printf("\nSorry, you can't go east from here. Try another direction. (N/S/W) "); }
                break;
            case 'W' :
                if (((current - 1) % 4)!=0) {
                    c = c - 1; }
                else {
                    printf("\nSorry, you can't go west from here. Try another direction. (N/E/S) "); }
                break;
            case 'X' :
                break;
                
        }
        

    } while (direction!='X');
    
    return;
    
}


void QUESTS(int a, int b)
{
    
    if (a==7 && b==0)
    {
        Q1();
        return;
    }
    else if (a==14 && b==1)
    {
        Q2B1();
        return;
    }
}

void Q1()
{
    printf("\nYou found the ring!\n");
    EXP++;
    completeQ=1;
    return;
}

void Q2B1()
{
    int skill = 2;
    int monster1HP = 10;
    int monster1ATK = 2;
    char battlechoice;
    int meleeattack = 5;
    int magicattack = 10;
    printf("You encounter a wild monster with %d HP\n",monster1HP);
    while (monster1HP > 0 )
    {
        printf("Press 'a' to melee attack or 'm' to use magic.\n");
        scanf(" %c",&battlechoice);
        switch (battlechoice)
        {
            case 'a':
            {
                monster1HP=monster1HP-meleeattack;
                break;
            }
            case 'm':
            {
                monster1HP=monster1HP-magicattack;
                break;
            }
        }
        printf("The monster has %d HP.\n",monster1HP);
        if (monster1HP > 0)
        {
            printf("The monster attacks for %d damage!\n",monster1ATK);
            HP = HP - monster1ATK;
            printf("Your HP is now %d\n",HP);
        }
    }
    EXP+=skill;
    printf("Your EXP is %d\n",EXP);
    completeQ=2;
    return;
}


void map()
{
    int i,j;
    
    for(i = 0; i < 4; ++i)
    {
        for(j = 0; j < 4; ++j)
        {
            printf("%d\t",location[i][j]);
        }
        printf("\n");
    }
}
